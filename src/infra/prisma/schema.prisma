generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model State {
  id             Int              @id @default(autoincrement())
  name           String
  abbreviation   String           @db.VarChar(2)
  UtilityCompany UtilityCompany[]
  Residence      Residence[]

  @@map("state")
}

model Customer {
  id           Int         @id @default(autoincrement())
  cpf_cnpj     String      @unique @db.VarChar(14)
  name         String
  email        String?     @unique
  mobile_phone String?     @db.VarChar(20)
  is_active    Boolean     @default(true)
  Residence    Residence[]

  @@map("customer")
}

model UtilityCompany {
  id                             Int    @id @default(autoincrement())
  name                           String
  id_state                       Int
  standard_rate                  Int
  off_peak_rate                  Int
  peak_rate                      Int
  intermediate_rate              Int
  end_first_intermediate_time    Int?
  end_second_intermediate_time   Int?
  end_peak_time                  Int?
  start_first_intermediate_time  Int?
  start_second_intermediate_time Int?
  start_peak_time                Int?

  State     State       @relation(fields: [id_state], references: [id])
  Residence Residence[]

  @@map("utility_company")
}

model Residence {
  id                 Int     @id @default(autoincrement())
  street             String
  number             Int
  complement         String?
  neighborhood       String
  city               String
  id_state           Int
  postal_code        String
  id_utility_company Int
  nickname           String
  id_customer        Int

  State          State          @relation(fields: [id_state], references: [id])
  UtilityCompany UtilityCompany @relation(fields: [id_utility_company], references: [id])
  Customer       Customer       @relation(fields: [id_customer], references: [id])
  Hardware       Hardware[]

  @@map("residence")
}

model Hardware {
  id               Int     @id @default(autoincrement())
  firmware_version String  @db.VarChar(20)
  hardware_version String  @db.VarChar(20)
  nickname         String?
  id_residence     Int

  Residence Residence @relation(fields: [id_residence], references: [id])
  Reading   Reading[]

  @@map("hardware")
}

model Reading {
  id              Int      @id @default(autoincrement())
  energy_consumed Int
  current_value   Int
  voltage_value   Int
  start_time      DateTime
  end_time        DateTime
  id_hardware     Int

  Hardware Hardware @relation(fields: [id_hardware], references: [id])

  @@map("reading")
}

model Log {
  id                Int      @id @default(autoincrement())
  route             String
  request_type      String
  request_body      String
  response_body     String
  request_timestamp DateTime @default(now())

  @@map("log")
}
